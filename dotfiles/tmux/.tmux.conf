# if you are using fresh tmux, install the tmux plugin manager (TPM) with this command: `git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm`
# then you can install plugin with <prefix> + I
# command and shortcut cheatsheet: https://tmuxcheatsheet.com/

# set color
set -g default-terminal "screen-256color"
set-option -sa terminal-overrides ",xterm*:Tc"
# enable mouse
set -g mouse on

# set new prefix to Ctrl + a
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# prefix-R to reload config -> already provide by tmux sensible plugin
# unbind R
# bind R source-file ~/.tmux.conf \; display "Reloaded!"

# split 2 right side panes
bind \\ split-window -h -p 30 \; split-window -v \; select-pane -L
bind | split-window -v -p 30 \; split-window -h \; select-pane -U

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# split follow the current pane path
bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# INTEGRATE WITH TMUX.NVIM
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

#navigate
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }
bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

# resize
bind -n 'C-left' if-shell "$is_vim" 'send-keys C-left' 'resize-pane -L 1'
bind -n 'C-down' if-shell "$is_vim" 'send-keys C-down' 'resize-pane -D 1'
bind -n 'C-up' if-shell "$is_vim" 'send-keys C-up' 'resize-pane -U 1'
bind -n 'C-right' if-shell "$is_vim" 'send-keys C-right' 'resize-pane -R 1'
bind-key -T copy-mode-vi C-left resize-pane -L 1
bind-key -T copy-mode-vi C-down resize-pane -D 1
bind-key -T copy-mode-vi C-up resize-pane -U 1
bind-key -T copy-mode-vi C-right resize-pane -R 1
# END INTEGRATE WITH TMUX.NVIM

# tmux sessionizer, installed with nix, not through tpm
bind o display-popup -E "tms" # search and open git repo as session
# bind C-u display-popup -E "tms switch"
bind w run-shell -b "tmuxwindows" # find and switch tmux windows
bind j run-shell -b "tmux neww quicksearch"
bind s display-popup -E "tmux-session-manager" # switch session

# PLUGIN LIST
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# create and load preset of tmux windows, sessions
set -g @plugin 'jimeh/tmuxifier'
# save and restore sessions prefix-Ctrl-s and prefix-Ctrl-r
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'sainnhe/tmux-fzf'

#tmux yank, set keymaps to more vim-like copy mode
set -g @plugin 'tmux-plugins/tmux-yank'
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

#theme
set -g @plugin 'catppuccin/tmux'
set -g @catppuccin_flavour 'macchiato'
set -g @catppuccin_window_tabs_enabled on # or off to disable window_tabs
set -g @catppuccin_pill_theme_enabled on
set -g @catppuccin_host "on"
set -g @catppuccin_user "on"
set -g status-position top
# END PLUGIN LIST

set -s focus-events on

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

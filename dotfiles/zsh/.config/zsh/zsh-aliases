#!/bin/sh
alias rl='source $ZSHRC'
alias zsh-update-plugins="find "$ZDOTDIR/plugins" -type d -exec test -e '{}/.git' ';' -print0 | xargs -I {} -0 git -C {} pull -q"

# others
alias weather='curl wttr.in' #weather
alias news='newsboat'

# cat -> bat
if command -v bat &> /dev/null; then
    alias cat="bat -pp"
    alias catt="bat"
fi

# neovim
alias v='nvim'
alias vv='nvim .'
alias zshrc="nvim $ZDOTDIR"
alias nvimrc='nvim ~/.config/nvim/'

# tmux
# alias txi='tmuxifier' # tmux session preset
alias tma='tmux attach'
alias tme='nvim ~/.tmux.conf'
alias tmr='tmux source ~/.tmux.conf'
alias dev="tmux split-window -h -p 30 \; split-window -v \; select-pane -L && nvim ."
alias dev2="tmux split-window -v -p 30 \; split-window -h \; select-pane -U && nvim ."
alias side="tmux split-window -h -p 30 \; split-window -v \; select-pane -L"
alias side2="tmux split-window -v -p 30 \; split-window -h \; select-pane -U"

# Colorize grep output (good for log files)
alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'

# confirm before overwriting something
alias cp="cp -i"
alias mv='mv -i'
alias rm='rm -i'

# easier to read disk
alias df='df -h'     # human-readable sizes

# git
alias m="git checkout master"
alias s="git checkout stable"
alias lg='lazygit'
alias ld='lazydocker'

# other
alias cs="cht.sh" # cheatsheet for command lines
alias loc="git ls-files | xargs wc -l" #count line of code in git repo

# NIX {{{
alias hmp="home-manager packages"
alias ckshell='if [ -n "$IN_NIX_SHELL" ]; then echo "Inside nix-shell"; else echo "Not inside nix-shell"; fi;'
nixify() { # create starter file for direnv
    if [[ ! -e shell.nix ]] && [[ ! -e default.nix ]]; then
        cat << EOF > shell.nix
with import <nixpkgs> {};
mkShell {
  packages = [
    # list the packages here
  ];
}
EOF
    fi
    if [ ! -e ./.envrc ]; then
        echo "use nix" > .envrc
    fi
    direnv allow
    ${EDITOR:-vim} shell.nix
}

# taskell, I store my taskell files in my personal knowledge management folder
tk() {
    taskell $PKM/otherapps/taskell/"$1".md
}
alias tkp='tk projects'
_tk_completion() {
    local files
    files=($PKM/otherapps/taskell/*.md)
    reply=($(basename -s .md -- $files))
}
compctl -K _tk_completion tk

# create a new directory and enter it
nd() {
    mkdir -p -- "$1" &&
    cd -P -- "$1"
}

# exa aliases
alias ls='exa --group-directories-first --icons'
if exa --version | grep -q '+git';
then
    alias ll='ls -lh --git'
else
    alias ll='ls -lh'
fi
alias la='ll -a'
alias tree='ll --tree'
alias yt='ytfzf'

# Convert video to gif file.
# Usage: video2gif video_file (scale) (fps)
video2gif() {
  ffmpeg -y -i "${1}" -vf fps=${3:-10},scale=${2:-320}:-1:flags=lanczos,palettegen "${1}.png"
  ffmpeg -i "${1}" -i "${1}.png" -filter_complex "fps=${3:-10},scale=${2:-320}:-1:flags=lanczos[x];[x][1:v]paletteuse" "${1}".gif
  rm -f "${1}.png"
}

case "$(uname -s)" in
    Darwin)
        # echo 'Mac OS X'
        alias hms='(cd ~/nixfiles && home-manager switch --flake ".#macos")'
        # capture standard output of process
        capture() {
            sudo dtrace -p "$1" -qn '
        syscall::write*:entry
        /pid == $target && arg0 == 1/ {
            printf("%s", copyinstr(arg1, arg2));
        }
            '
        }
        ;;

    Linux)
        alias hms='(cd ~/nixfiles && home-manager switch --flake ".#linux")'
        ;;

    CYGWIN* | MINGW32* | MSYS* | MINGW*)
        # echo 'MS Windows'
        ;;
    *)
        # echo 'Other OS'
        ;;
esac

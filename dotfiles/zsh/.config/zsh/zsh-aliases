#!/bin/sh
alias rl='source $ZSHRC'
alias zsh-update-plugins="find "$ZDOTDIR/plugins" -type d -exec test -e '{}/.git' ';' -print0 | xargs -I {} -0 git -C {} pull -q"

# others
alias wt='curl wttr.in' #weather

# cat -> bat
if command -v bat &> /dev/null; then
  alias cat="bat -pp"
  alias catt="bat"
fi

# neovim
alias v='nvim'
alias vv='nvim .'
alias zshrc="nvim $ZDOTDIR"
alias nvimrc='nvim ~/.config/nvim/'

# tmux
# alias txi='tmuxifier' # tmux session preset
alias tme='nvim ~/.tmux.conf'
alias tmr='tmux source ~/.tmux.conf'


# Colorize grep output (good for log files)
alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'

# confirm before overwriting something
alias cp="cp -i"
alias mv='mv -i'
alias rm='rm -i'

# easier to read disk
alias df='df -h'     # human-readable sizes

# git
alias m="git checkout master"
alias s="git checkout stable"
alias lg='lazygit'
alias ld='lazydocker'

# other
alias cs="cht.sh" # cheatsheet for command lines

#nix related
alias hmp="home-manager packages"
alias ckshell='if [ -n "$IN_NIX_SHELL" ]; then echo "Inside nix-shell"; else echo "Not inside nix-shell"; fi;'
nixify() { # create starter file for direnv
  if [[ ! -e shell.nix ]] && [[ ! -e default.nix ]]; then
    cat << EOF > shell.nix
with import <nixpkgs> {};
mkShell {
  packages = [
    # list the packages here
  ];
}
EOF
  fi
  if [ ! -e ./.envrc ]; then
    echo "use nix" > .envrc
  fi
  direnv allow
  ${EDITOR:-vim} shell.nix
}

# taskell, I store my taskell files in my personal knowledge management folder
tk() {
    taskell $PKM/otherapps/taskell/"$1".md
}
_tk_completion() {
    local files
    files=($PKM/otherapps/taskell/*.md)
    reply=($(basename -s .md -- $files))
}
compctl -K _tk_completion tk


case "$(uname -s)" in

Darwin)
	# echo 'Mac OS X'
	alias hms='(cd ~/nixfiles && home-manager switch --flake ".#macos")'
	;;

Linux)
	alias hms='(cd ~/nixfiles && home-manager switch --flake ".#linux")'
	;;

CYGWIN* | MINGW32* | MSYS* | MINGW*)
	# echo 'MS Windows'
	;;
*)
	# echo 'Other OS'
	;;
esac

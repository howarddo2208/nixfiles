#!/bin/sh

# some useful options (man zshoptions)
setopt autocd extendedglob nomatch menucomplete
setopt interactive_comments
stty stop undef		# Disable ctrl-s to freeze terminal.
zle_highlight=('paste:none')

# beeping is annoying
unsetopt BEEP

# completions
autoload -Uz compinit
zstyle ':completion:*' menu select
# zstyle ':completion::complete:lsof:*' menu yes select
zmodload zsh/complist
# compinit
_comp_options+=(globdots)		# Include hidden files.

autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search

# Colors
autoload -Uz colors && colors

# Useful Functions
source "$ZDOTDIR/zsh-functions"

# Normal files to source
zsh_add_file "zsh-exports"
zsh_add_file "zsh-vim-mode"
zsh_add_file "zsh-aliases"
zsh_add_file "zsh-eval"
zsh_add_file "themes/catppuccin-mocha"

# Plugins
zsh_add_plugin "zsh-users/zsh-autosuggestions"
zsh_add_plugin "zdharma-continuum/fast-syntax-highlighting"
zsh_add_plugin "chisui/zsh-nix-shell" 
zsh_add_plugin "nix-community/nix-zsh-completions"
# For more plugins: https://github.com/unixorn/awesome-zsh-plugins
# zsh_add_completion "esc/conda-zsh-completion" false
# More completions https://github.com/zsh-users/zsh-completions

# test search for pkm, still not working, need to learn more about bash scripting
# search_folder() {
#   read -r -p "Enter search term: " search_term
#   search_result=$(find "$PKM" -type d \( -name '.git' -o -name 'logseq' \) -prune -o -type f ! -name '*.excalidraw' -exec grep -I "$search_term" {} + | awk -F: -v PKM="$PKM" '{gsub(PKM, ""); printf "%s:%d:%s\n", $1, $2, $3}' | awk -F: -v PKM="$PKM" '{printf "%s/%s:%s\n", PKM, $1, $2}' | fzf)
#
#   if [[ -n "$search_result" ]]; then
#     file_path=$(echo "$search_result" | awk -F: -v PKM="$PKM" '{gsub(PKM, ""); print $1}')
#     line_number=$(echo "$search_result" | awk -F: '{print $2}')
#     $EDITOR "$file_path" +"$line_number"
#   fi
# }
# zle -N search_folder
# bindkey '^s' search_folder

# Key-bindings
bindkey -s '^o' 'vifm^M'
bindkey -s '^f' 'zi^M'
# bindkey -s '^s' 'ncdu^M'
bindkey -s '^v' 'nvim $(fzf)^M'
bindkey -s '^z' 'zi^M'
bindkey '^[[P' delete-char
bindkey "^p" up-line-or-beginning-search # Up
# bindkey "^n" down-line-or-beginning-search # Down
bindkey "^k" up-line-or-beginning-search # Up
bindkey "^j" down-line-or-beginning-search # Down
bindkey -r "^u"
bindkey -r "^d"
bindkey '^ ' autosuggest-accept
bindkey '^e' _atuin_search_widget


# Edit line in vim with ctrl-e:
autoload edit-command-line; zle -N edit-command-line
# bindkey '^e' edit-command-line

# history
HISTFILE=~/.zsh_history

#enable fzf keybindings installed by nix
if [ -n "${commands[fzf-share]}" ]; then
  source "$(fzf-share)/key-bindings.zsh"
  source "$(fzf-share)/completion.zsh"
fi
export FZF_DEFAULT_OPTS=" \
--color=bg+:#363a4f,bg:#24273a,spinner:#f4dbd6,hl:#ed8796 \
--color=fg:#cad3f5,header:#ed8796,info:#c6a0f6,pointer:#f4dbd6 \
--color=marker:#f4dbd6,fg+:#cad3f5,prompt:#c6a0f6,hl+:#ed8796"

# Load and initialise completion system
# autoload -Uz compinit
